# 自用模板，kitty(kitty.ceo)能直接用，其他机场需自行调整代理组
# redir-host+域名嗅探，分流规则如下:
  # 直连(国内dns)：fcm,bilibili,steam下载,onedrive下载,直连dns,中国域名,香港/中国ip
  # 代理(远程代理dns): 部分cn谷歌域名,代理dns,gfw,未匹配规则代理兜底
  # 系统(系统dns): 部分私人域名,lan及ip
  # 拒绝(仅rcode://success): 秋风去广告


## 设置 ##
mixed-port: 7890
mode: rule
ipv6: true
allow-lan: false
bind-address: "*"
log-level: silent
unified-delay: true
tcp-concurrent: true
disable-keep-alive: true
find-process-mode: always
global-client-fingerprint: chrome
etag-support: true
experimental: { quic-go-disable-gso: false, quic-go-disable-ecn: true, dialer-ip4p-convert: false }
profile: { store-selected: true, store-fake-ip: false }
direct-dns: &direct-dns ["https://dns.alidns.com/dns-query#DIRECT&h3=true","https://https://doh.pub/dns-query#DIRECT&h3=false"]
proxy-dns: &proxy-dns ["https://dns.google/dns-query#PROXY&h3=true","https://cloudflare-dns.com/dns-query#PROXY&h3=true"]
hosts: { dns.google: ['8.8.8.8','8.8.4.4','2001:4860:4860::8888','2001:4860:4860::8844'], dns.alidns.com: ['223.5.5.5','223.6.6.6','2400:3200::1','2400:3200:baba::1'], doh.pub: ['119.29.29.29','2402:4e00::'], cloudflare-dns.com: ['1.1.1.1','1.0.0.1','2606:4700:4700::1111','2606:4700:4700::1001'] }
dns: { enable: true, cache-algorithm: arc, listen: 0.0.0.0:1053, ipv6: true, prefer-h3: true, use-hosts: true, use-system-hosts: true, enhanced-mode: redir-host, default-nameserver: [223.5.5.5,119.29.29.29], proxy-server-nameserver: *direct-dns, nameserver: *proxy-dns, nameserver-policy: { 'rule-set:private': [system], 'rule-set:direct_domain,bilibili,cn': *direct-dns, 'rule-set:ads': ['rcode://success'] } }
sniffer: { enable: true, force-dns-mapping: false, parse-pure-ip: false, override-destination: true, sniff: { HTTP: { ports: [80, 8080-8880], override-destination: true }, TLS: { ports: [443, 8443] }, QUIC: { ports: [443, 8443] } },skip-domain: ["RULE-SET:private"], skip-src-address: ["RULE-SET:private_ip"] }
tun: { enable: true, stack: mixed, dns-hijack: ["any:53","tcp://any:53"], mtu: 9000, auto-route: true, auto-detect-interface: true, strict-route: false, udp-timeout: 600 }


## 订阅 ##
proxy-providers: { link: { type: http, url: "订阅链接", path: ./link.yaml, interval: 86400, proxy: DIRECT, header: { User-Agent: ["clash-verge/v2.3.2"] }, health-check: { enable: true, url: 'https://www.google.com/generate_204', interval: 7200, timeout: 5000, max-failed-times: 3, lazy: true }, override: { udp: true, tfo: true, mptcp: true, ip-version: ipv6-prefer } } }
auto: &auto { type: url-test, include-all-providers: true, tolerance: 20, lazy: true, hidden: true }
bal: &bal { type: load-balance, include-all-providers: true, strategy: round-robin, lazy: true, hidden: true }
proxy-groups:
  - { name: PROXY, type: select, proxies: [自动选择,负载均衡,故障转移,手动选择,DIRECT], include-all-providers: true, filter: "流量" }
  # 新加坡,日本,美国,香港,台湾,德国,英国,荷兰,韩国,加拿大,印度,俄罗斯,土耳其,越南,印尼
  - { name: 自动选择, type: select, proxies: [新加坡,日本,美国,香港,德国,英国,荷兰,韩国], lazy: true }
  # 新加坡⁺,日本⁺,美国⁺,香港⁺,台湾⁺,德国⁺,英国⁺,荷兰⁺,韩国⁺,加拿大⁺,印度⁺,俄罗斯⁺,土耳其⁺,越南⁺,印尼⁺
  - { name: 负载均衡, type: select, proxies: [新加坡⁺,日本⁺,美国⁺,香港⁺,德国⁺,英国⁺,荷兰⁺,韩国⁺], lazy: true }
  - { name: 故障转移, type: fallback, include-all-providers: true, exclude-filter: "🇦🇶|流量|到期|重置", lazy: true }
  - { name: 手动选择, type: select, include-all-providers: true, exclude-filter: "🇦🇶|流量|到期|重置", lazy: true }
  - { name: 新加坡, <<: *auto, filter: "🇸🇬|新加坡" }
  - { name: 日本, <<: *auto, filter: "🇯🇵|日本" }
  - { name: 美国, <<: *auto, filter: "🇺🇸|美国" }
  - { name: 香港, <<: *auto, filter: "🇭🇰|香港" }
  # - { name: 台湾, <<: *auto, filter: "🇹🇼|台湾" }
  - { name: 德国, <<: *auto, filter: "🇩🇪|德国" }
  - { name: 英国, <<: *auto, filter: "🇬🇧|英国" }
  - { name: 荷兰, <<: *auto, filter: "🇳🇱|荷兰" }
  - { name: 韩国, <<: *auto, filter: "🇰🇷|韩国" }
  # - { name: 加拿大, <<: *auto, filter: "🇨🇦|加拿大" }
  # - { name: 印度, <<: *auto, filter: "🇮🇳|印度" }
  # - { name: 俄罗斯, <<: *auto, filter: "🇷🇺|俄罗斯" }
  # - { name: 土耳其, <<: *auto, filter: "🇹🇷|土耳其" }
  # - { name: 越南, <<: *auto, filter: "🇻🇳|越南" }
  # - { name: 印尼, <<: *auto, filter: "🇮🇩|印尼" }
  - { name: 新加坡⁺, <<: *bal, filter: "🇸🇬|新加坡" }
  - { name: 日本⁺, <<: *bal, filter: "🇯🇵|日本" }
  - { name: 美国⁺, <<: *bal, filter: "🇺🇸|美国" }
  - { name: 香港⁺, <<: *bal, filter: "🇭🇰|香港" }
  # - { name: 台湾⁺, <<: *bal, filter: "🇹🇼|台湾" }
  - { name: 德国⁺, <<: *bal, filter: "🇩🇪|德国" }
  - { name: 英国⁺, <<: *bal, filter: "🇬🇧|英国" }
  - { name: 荷兰⁺, <<: *bal, filter: "🇳🇱|荷兰" }
  - { name: 韩国⁺, <<: *bal, filter: "🇰🇷|韩国" }
  # - { name: 加拿大⁺, <<: *bal, filter: "🇨🇦|加拿大" }
  # - { name: 印度⁺, <<: *bal, filter: "🇮🇳|印度" }
  # - { name: 俄罗斯⁺, <<: *bal, filter: "🇷🇺|俄罗斯" }
  # - { name: 土耳其⁺, <<: *bal, filter: "🇹🇷|土耳其" }
  # - { name: 越南⁺, <<: *bal, filter: "🇻🇳|越南" }
  # - { name: 印尼⁺, <<: *bal, filter: "🇮🇩|印尼" }


## 规则 ##
rules:
  - RULE-SET,ads,REJECT
  - RULE-SET,private,DIRECT
  - RULE-SET,private_ip,DIRECT,no-resolve
  - RULE-SET,proxy_domain,PROXY
  - RULE-SET,direct_domain,DIRECT
  - RULE-SET,bilibili,DIRECT
  - RULE-SET,gfw,PROXY
  - RULE-SET,cn,DIRECT
  - RULE-SET,proxy_ip,PROXY,no-resolve
  - RULE-SET,direct_ip,DIRECT,no-resolve
  - RULE-SET,hk_ip,DIRECT,no-resolve
  - RULE-SET,cn_ip,DIRECT
  - MATCH,PROXY
ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: yaml, proxy: PROXY }
domain: &domain { type: http, interval: 86400, behavior: domain, format: yaml, proxy: PROXY }
rule-providers:
  ads: { <<: *domain, url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml", path: ./ads.yaml }
  proxy_domain: { <<: *domain, url: "https://raw.githubusercontent.com/echs-top/proxy/main/rules/proxy_domain.yaml", path: ./proxy_domain.yaml }
  direct_domain: { <<: *domain, url: "https://raw.githubusercontent.com/echs-top/proxy/main/rules/direct_domain.yaml", path: ./direct_domain.yaml }
  private: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.yaml", path: ./private.yaml }
  bilibili: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.yaml", path: ./bilibili.yaml }
  gfw: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.yaml", path: ./gfw.yaml }
  cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml", path: ./cn.yaml }
  private_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.yaml", path: ./private_ip.yaml }
  proxy_ip: { <<: *ip, url: "https://raw.githubusercontent.com/echs-top/proxy/main/rules/proxy_ip.yaml", path: ./proxy_ip.yaml }
  direct_ip: { <<: *ip, url: "https://raw.githubusercontent.com/echs-top/proxy/main/rules/direct_ip.yaml", path: ./direct_ip.yaml }
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml", path: ./cn_ip.yaml }
  hk_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/hk.yaml", path: ./hk_ip.yaml }
