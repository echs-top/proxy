## 配置 ##
mixed-port: 7890
mode: rule
ipv6: true
allow-lan: true
bind-address: "*"
log-level: silent
unified-delay: true
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: random
experimental: { quic-go-disable-gso: true, quic-go-disable-ecn: true, dialer-ip4p-convert: false }
profile: { store-selected: true, store-fake-ip: true }
direct-dns: &direct-dns ["https://doh.pub/dns-query#DIRECT&h3=false&skip-cert-verify=true&ecs=119.29.29.29/24&ecs-override=true","https://dns.alidns.com/dns-query#DIRECT&h3=true&skip-cert-verify=true&ecs=223.5.5.5/24&ecs-override=true"]
proxy-dns: &proxy-dns ["https://dns.google/dns-query#PROXY&h3=true&skip-cert-verify=true&ecs=8.8.8.8/24&ecs-override=true","https://dns11.quad9.net/dns-query#PROXY&h3=false&skip-cert-verify=true&ecs=9.9.9.11/24&ecs-override=true"]
dns: { enable: true, cache-algorithm: arc, listen: 0.0.0.0:1053, ipv6: true, prefer-h3: true, use-hosts: true, use-system-hosts: true, enhanced-mode: redir-host, default-nameserver: [119.29.29.29, 223.5.5.5], proxy-server-nameserver: *direct-dns, nameserver: *proxy-dns, nameserver-policy: { "RULE-SET:private,direct_domain,cn": *direct-dns } }
sniffer: { enable: true, force-dns-mapping: true, parse-pure-ip: true, override-destination: true, sniff: { HTTP: { ports: [80, 8080-8880], override-destination: true }, TLS: { ports: [443, 8443] }, QUIC: { ports: [443, 8443] } } }
tun: { enable: true, stack: mixed, dns-hijack: ["any:53","tcp://any:53"], auto-route: true, auto-redirect: true, auto-detect-interface: true, strict-route: true, udp-timeout: 600 }


## 订阅 ##
proxy-providers:
  link: { type: http, url: "机场订阅链接", path: ./link.yaml, interval: 86400, proxy: DIRECT, header: { User-Agent: ["clash-verge/v2.3.1"] }, health-check: { enable: true, url: 'http://www.google.com/generate_204', interval: 7200, timeout: 5000, max-failed-times: 2}, override: { udp: true, tfo: true, mptcp: true, ip-version: ipv6-prefer, skip-cert-verify: true } }
proxy-groups:
  - { name: PROXY, type: select, proxies: [负载均衡,自动选择,故障转移,手动选择,DIRECT], use: [link], filter: "剩余流量" }
  - { name: 负载均衡, type: select, proxies: [新加坡⁺,日本⁺,美国⁺,德国⁺,香港⁺,台湾⁺,韩国⁺], lazy: true }
  - { name: 自动选择, type: select, proxies: [新加坡,日本,美国,德国,香港,台湾,韩国], lazy: true }
  - { name: 故障转移, type: fallback, use: [link], exclude-filter: "🇦🇶|剩余流量|套餐到期|距离下次重置|过滤", lazy: true }
  - { name: 手动选择, type: select, use: [link], exclude-filter: "🇦🇶|剩余流量|套餐到期|距离下次重置|过滤", lazy: true }
  - { name: ONEDRIVE, type: select, proxies: [DIRECT,PROXY] }
  # - { name: MICROSOFT, type: select, proxies: [DIRECT,PROXY] }
  # - { name: STEAM, type: select, proxies: [PROXY,DIRECT] }
  - { name: 新加坡⁺, type: load-balance, use: [link], filter: "🇸🇬", strategy: round-robin, lazy: true, hidden: true }
  - { name: 日本⁺, type: load-balance, use: [link], filter: "🇯🇵", strategy: round-robin, lazy: true, hidden: true }
  - { name: 美国⁺, type: load-balance, use: [link], filter: "🇺🇸", strategy: round-robin, lazy: true, hidden: true }
  - { name: 德国⁺, type: load-balance, use: [link], filter: "🇩🇪", strategy: round-robin, lazy: true, hidden: true }
  - { name: 香港⁺, type: load-balance, use: [link], filter: "🇭🇰", strategy: round-robin, lazy: true, hidden: true }
  - { name: 台湾⁺, type: load-balance, use: [link], filter: "🇹🇼", strategy: round-robin, lazy: true, hidden: true }
  - { name: 韩国⁺, type: load-balance, use: [link], filter: "🇰🇷", strategy: round-robin, lazy: true, hidden: true }
  - { name: 新加坡, type: url-test, use: [link], filter: "🇸🇬", tolerance: 20, lazy: true, hidden: true }
  - { name: 日本, type: url-test, use: [link], filter: "🇯🇵", tolerance: 20, lazy: true, hidden: true }
  - { name: 美国, type: url-test, use: [link], filter: "🇺🇸", tolerance: 20, lazy: true, hidden: true }
  - { name: 德国, type: url-test, use: [link], filter: "🇩🇪", tolerance: 20, lazy: true, hidden: true }
  - { name: 香港, type: url-test, use: [link], filter: "🇭🇰", tolerance: 20, lazy: true, hidden: true }
  - { name: 台湾, type: url-test, use: [link], filter: "🇹🇼", tolerance: 20, lazy: true, hidden: true }
  - { name: 韩国, type: url-test, use: [link], filter: "🇰🇷", tolerance: 20, lazy: true, hidden: true }


## 规则 ##
rules:
  # - RULE-SET,ads,REJECT
  - RULE-SET,private,DIRECT
  - RULE-SET,proxy_domain,PROXY
  - RULE-SET,direct_domain,DIRECT
  - RULE-SET,onedrive,ONEDRIVE
  # - RULE-SET,microsoft,MICROSOFT
  # - RULE-SET,steam,STEAM
  - RULE-SET,proxy,PROXY
  - RULE-SET,cn,DIRECT
  - RULE-SET,private_ip,DIRECT
  - RULE-SET,proxy_ip,PROXY
  - RULE-SET,direct_ip,DIRECT
  - RULE-SET,cn_ip,DIRECT
  - MATCH,PROXY
ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: yaml, proxy: DIRECT }
domain: &domain { type: http, interval: 86400, behavior: domain, format: yaml, proxy: PROXY }
rule-providers:
  # ads: { <<: *domain, url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml", path: ./ads.yaml }
  private: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/private.yaml", path: ./private.yaml }
  proxy_domain: { <<: *domain, url: "https://raw.githubusercontent.com/echs-top/proxy/main/proxy_domain.yaml", path: ./proxy_domain.yaml }
  direct_domain: { <<: *domain, url: "https://raw.githubusercontent.com/echs-top/proxy/main/direct_domain.yaml", path: ./direct_domain.yaml }
  proxy_ip: { <<: *ip, url: "https://raw.githubusercontent.com/echs-top/proxy/main/proxy_ip.yaml", path: ./proxy_ip.yaml }
  direct_ip: { <<: *ip, url: "https://raw.githubusercontent.com/echs-top/proxy/main/direct_ip.yaml", path: ./direct_ip.yaml }
  onedrive: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.yaml", path: ./onedrive.yaml }
  # microsoft: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/microsoft-cn.yaml", path: ./microsoft.yaml }
  # steam: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.yaml", path: ./steam.yaml }
  proxy: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/proxy.yaml", path: ./proxy.yaml }
  cn: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cn.yaml", path: ./cn.yaml }
  private_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/privateip.yaml", path: ./private_ip.yaml }
  cn_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cnip.yaml", path: ./cn_ip.yaml }
